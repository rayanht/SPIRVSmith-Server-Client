# coding: utf-8

"""
    SPIRVSmith-Server

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 0.1.0
    Generated by: https://openapi-generator.tech
"""

import re  # noqa: F401
import sys  # noqa: F401
import typing  # noqa: F401
import functools  # noqa: F401

from frozendict import frozendict  # noqa: F401

import decimal  # noqa: F401
from datetime import date, datetime  # noqa: F401
from frozendict import frozendict  # noqa: F401

from spirvsmith_server_sdk.schemas import (  # noqa: F401
    AnyTypeSchema,
    ComposedSchema,
    DictSchema,
    ListSchema,
    StrSchema,
    IntSchema,
    Int32Schema,
    Int64Schema,
    Float32Schema,
    Float64Schema,
    NumberSchema,
    UUIDSchema,
    DateSchema,
    DateTimeSchema,
    DecimalSchema,
    BoolSchema,
    BinarySchema,
    NoneSchema,
    none_type,
    Configuration,
    Unset,
    unset,
    ComposedBase,
    ListBase,
    DictBase,
    NoneBase,
    StrBase,
    IntBase,
    Int32Base,
    Int64Base,
    Float32Base,
    Float64Base,
    NumberBase,
    UUIDBase,
    DateBase,
    DateTimeBase,
    BoolBase,
    BinaryBase,
    Schema,
    _SchemaValidator,
    _SchemaTypeChecker,
    _SchemaEnumMaker
)


class MutationsConfig(
    DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """
    _required_property_names = set((
        'w_memory_operation',
        'w_logical_operation',
        'w_arithmetic_operation',
        'w_control_flow_operation',
        'w_function_operation',
        'w_bitwise_operation',
        'w_conversion_operation',
        'w_composite_operation',
        'w_scalar_type',
        'w_container_type',
        'w_composite_constant',
        'w_scalar_constant',
    ))
    
    
    class w_memory_operation(
        _SchemaValidator(
        ),
    ):
        pass
    
    
    class w_logical_operation(
        _SchemaValidator(
        ),
    ):
        pass
    
    
    class w_arithmetic_operation(
        _SchemaValidator(
        ),
    ):
        pass
    
    
    class w_control_flow_operation(
        _SchemaValidator(
        ),
    ):
        pass
    
    
    class w_function_operation(
        _SchemaValidator(
        ),
    ):
        pass
    
    
    class w_bitwise_operation(
        _SchemaValidator(
        ),
    ):
        pass
    
    
    class w_conversion_operation(
        _SchemaValidator(
        ),
    ):
        pass
    
    
    class w_composite_operation(
        _SchemaValidator(
        ),
    ):
        pass
    
    
    class w_scalar_type(
        _SchemaValidator(
        ),
    ):
        pass
    
    
    class w_container_type(
        _SchemaValidator(
        ),
    ):
        pass
    
    
    class w_composite_constant(
        _SchemaValidator(
        ),
    ):
        pass
    
    
    class w_scalar_constant(
        _SchemaValidator(
        ),
    ):
        pass


    def __new__(
        cls,
        *args: typing.Union[dict, frozendict, ],
        w_memory_operation: w_memory_operation,
        w_logical_operation: w_logical_operation,
        w_arithmetic_operation: w_arithmetic_operation,
        w_control_flow_operation: w_control_flow_operation,
        w_function_operation: w_function_operation,
        w_bitwise_operation: w_bitwise_operation,
        w_conversion_operation: w_conversion_operation,
        w_composite_operation: w_composite_operation,
        w_scalar_type: w_scalar_type,
        w_container_type: w_container_type,
        w_composite_constant: w_composite_constant,
        w_scalar_constant: w_scalar_constant,
        _configuration: typing.Optional[Configuration] = None,
        **kwargs: typing.Type[Schema],
    ) -> 'MutationsConfig':
        return super().__new__(
            cls,
            *args,
            w_memory_operation=w_memory_operation,
            w_logical_operation=w_logical_operation,
            w_arithmetic_operation=w_arithmetic_operation,
            w_control_flow_operation=w_control_flow_operation,
            w_function_operation=w_function_operation,
            w_bitwise_operation=w_bitwise_operation,
            w_conversion_operation=w_conversion_operation,
            w_composite_operation=w_composite_operation,
            w_scalar_type=w_scalar_type,
            w_container_type=w_container_type,
            w_composite_constant=w_composite_constant,
            w_scalar_constant=w_scalar_constant,
            _configuration=_configuration,
            **kwargs,
        )
