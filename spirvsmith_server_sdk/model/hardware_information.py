# coding: utf-8

"""
    SPIRVSmith-Server

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 0.1.0
    Generated by: https://openapi-generator.tech
"""

import re  # noqa: F401
import sys  # noqa: F401
import typing  # noqa: F401
import functools  # noqa: F401

from frozendict import frozendict  # noqa: F401

import decimal  # noqa: F401
from datetime import date, datetime  # noqa: F401
from frozendict import frozendict  # noqa: F401

from spirvsmith_server_sdk.schemas import (  # noqa: F401
    AnyTypeSchema,
    ComposedSchema,
    DictSchema,
    ListSchema,
    StrSchema,
    IntSchema,
    Int32Schema,
    Int64Schema,
    Float32Schema,
    Float64Schema,
    NumberSchema,
    UUIDSchema,
    DateSchema,
    DateTimeSchema,
    DecimalSchema,
    BoolSchema,
    BinarySchema,
    NoneSchema,
    none_type,
    Configuration,
    Unset,
    unset,
    ComposedBase,
    ListBase,
    DictBase,
    NoneBase,
    StrBase,
    IntBase,
    Int32Base,
    Int64Base,
    Float32Base,
    Float64Base,
    NumberBase,
    UUIDBase,
    DateBase,
    DateTimeBase,
    BoolBase,
    BinaryBase,
    Schema,
    _SchemaValidator,
    _SchemaTypeChecker,
    _SchemaEnumMaker
)


class HardwareInformation(
    DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """
    _required_property_names = set((
        'hardware_type',
        'hardware_vendor',
        'hardware_model',
        'driver_version',
    ))

    @classmethod
    @property
    def hardware_type(cls) -> typing.Type['HardwareType']:
        return HardwareType

    @classmethod
    @property
    def hardware_vendor(cls) -> typing.Type['HardwareVendor']:
        return HardwareVendor
    hardware_model = StrSchema
    driver_version = StrSchema


    def __new__(
        cls,
        *args: typing.Union[dict, frozendict, ],
        hardware_type: hardware_type,
        hardware_vendor: hardware_vendor,
        hardware_model: hardware_model,
        driver_version: driver_version,
        _configuration: typing.Optional[Configuration] = None,
        **kwargs: typing.Type[Schema],
    ) -> 'HardwareInformation':
        return super().__new__(
            cls,
            *args,
            hardware_type=hardware_type,
            hardware_vendor=hardware_vendor,
            hardware_model=hardware_model,
            driver_version=driver_version,
            _configuration=_configuration,
            **kwargs,
        )

from spirvsmith_server_sdk.model.hardware_type import HardwareType
from spirvsmith_server_sdk.model.hardware_vendor import HardwareVendor
